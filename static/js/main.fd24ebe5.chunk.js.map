{"version":3,"sources":["assets/headshot.jpg","assets/github.svg","assets/linkedin.svg","assets/file-text.svg","assets/weather.jpg","assets/rng.jpg","assets/notetaker.jpg","assets/Resume.jpg","components/Header/index.js","components/Bio/index.js","components/Contact/index.js","components/Work/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","header","Nav","nav","Title","h1","Header","href","div","Content","Avatar","Info","Bio","src","headshot","Contact","useState","copied","setCopied","id","active","onClick","copy","setTimeout","isOdd","Preview","Link","a","WorkWrapper","WorkItem","img","title","description","links","index","map","target","Work","projects","project","footer","Links","Footer","github","linkedin","filetext","noteTakerImg","rngImg","weatherImg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd24ebe5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.35f387f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.3d232d24.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.2f33ca08.svg\";","module.exports = __webpack_public_path__ + \"static/media/file-text.3fc29065.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather.4b00ca32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rng.9283d9e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/notetaker.4f69d28b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.443f3200.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 15px 50px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.1);\r\n  h1 {\r\n    color: #212529;\r\n  }\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  a {\r\n    text-decoration: none;\r\n    color: #2b8a3e;\r\n    background-color: #ebfbee;\r\n    border-radius: 3px;\r\n    margin-left: 10px;\r\n    padding: 6px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1``;\r\nconst Header = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Jeremiah</Title>\r\n      <Nav>\r\n        <a href=\"#work\">Work</a>\r\n        <a href=\"#contact\">Contact</a>\r\n      </Nav>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport headshot from \"../../assets/headshot.jpg\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: #2b8a3e;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 900px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  img {\r\n    width: 600px;\r\n    height: auto;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translateY(-50%) translateX(-50%);\r\n  }\r\n\r\n  position: relative;\r\n  min-width: 250px;\r\n  height: 250px;\r\n  width: 250px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  color: white;\r\n  padding-left: 50px;\r\n`;\r\n\r\nconst Bio = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Avatar>\r\n          <img src={headshot} />\r\n        </Avatar>\r\n        <Info>\r\n          <h2>Welcome to my Portfolio </h2>\r\n          <p>\r\n            I'm Jeremiah, a construction manager in Seattle, WA. I am passionate\r\n            about development and am certified from the University of Washington\r\n            in web development. I have a 120lb Bernese Mountain Dog, Opie, and\r\n            live with my Fiance in West Seattle.{\" \"}\r\n          </p>\r\n        </Info>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport Confetti from \"react-dom-confetti\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: #ebfbee;\r\n  padding: 20px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 400px;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  span {\r\n    color: #2b8a3e;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Contact = () => {\r\n  const [copied, setCopied] = useState(false);\r\n  const copyEmail = () => {\r\n    copy(\"jeremiahyates1992@gmail.com\");\r\n    setCopied(true);\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 1000);\r\n  };\r\n  return (\r\n    <Wrapper id=\"contact\">\r\n      <Content>\r\n        <h1>Contact me</h1>\r\n        <Confetti active={copied} />\r\n        <p>\r\n          Simply click <span onClick={() => copyEmail()}>here</span> to copy my\r\n          email to your clipboard!\r\n        </p>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 900px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: ${({ isOdd }) => (isOdd ? \"row\" : \"row-reverse\")};\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Info = styled.div``;\r\n\r\nconst Preview = styled.div`\r\n  width: 200px;\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    align-self: center;\r\n  }\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  color: #2b8a3e;\r\n  background-color: #ebfbee;\r\n  border-radius: 3px;\r\n  margin-left: 10px;\r\n  padding: 6px;\r\n`;\r\n\r\nconst WorkWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst WorkItem = ({ img, title, description, links, index }) => (\r\n  <Wrapper isOdd={index % 2}>\r\n    <Preview>\r\n      <img src={img} />\r\n    </Preview>\r\n    <Info>\r\n      <h2>{title}</h2>\r\n      <p>{description}</p>\r\n      {links.map(({ href, title }) => (\r\n        <Link href={href} target=\"_blank\" title={title}>\r\n          {title}\r\n        </Link>\r\n      ))}\r\n    </Info>\r\n  </Wrapper>\r\n);\r\n\r\nconst Work = ({ projects }) => (\r\n  <WorkWrapper id=\"work\">\r\n    <h1>My Work</h1>\r\n    {projects.map((project, index) => (\r\n      <WorkItem {...project} index={index} />\r\n    ))}\r\n  </WorkWrapper>\r\n);\r\n\r\nexport default Work;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport github from \"../../assets/github.svg\";\r\nimport linkedin from \"../../assets/linkedin.svg\";\r\nimport filetext from \"../../assets/file-text.svg\";\r\nimport resume from \"../../assets/Resume.jpg\";\r\n\r\nconst Wrapper = styled.footer`\r\n  text-align: center;\r\n  padding: 40px;\r\n  background: #2b8a3e;\r\n  color: white;\r\n  font-weight: bold;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-center: center;\r\n`;\r\n\r\nconst Links = styled.div`\r\n  display: flex;\r\n  flex-diretion: row;\r\n  a {\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <p>Jeremiah 2020</p>\r\n\r\n      <Links>\r\n        <a href=\"https://github.com/jyates92\">\r\n          <img src={github} />\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/jeremiah-yates/\">\r\n          <img src={linkedin} />\r\n        </a>\r\n        <a href=\"https://drive.google.com/file/d/1BxEdYOZqjnbzRh7T9cXkd_GL6a-rzZiP/view\">\r\n          <img src={filetext} />\r\n        </a>\r\n      </Links>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport Bio from \"./components/Bio\";\nimport Contact from \"./components/Contact\";\nimport Work from \"./components/Work\";\nimport Footer from \"./components/Footer\";\n\nimport weatherImg from \"./assets/weather.jpg\";\nimport rngImg from \"./assets/rng.jpg\";\nimport noteTakerImg from \"./assets/notetaker.jpg\";\n\nimport \"./App.css\";\n\nconst projects = [\n  {\n    img: noteTakerImg,\n    title: \"Note Taker\",\n    description: \"This application is handy for keeping reminder notes!\",\n    links: [\n      { href: \"https://github.com/jyates92/NoteTaker\", title: \"Github\" },\n      { href: \"https://givemesomenotes.herokuapp.com/\", title: \"Site\" },\n    ],\n  },\n  {\n    img: rngImg,\n    title: \"Random Number Generator\",\n    description:\n      \"This app takes random numbers, letters, and characters based on user input and returns a random string of specified length!\",\n    links: [\n      { href: \"https://github.com/jyates92/RandomNumberGen\", title: \"Github\" },\n      { href: \"https://jyates92.github.io/RandomNumberGen/\", title: \"Site\" },\n    ],\n  },\n  {\n    img: weatherImg,\n    title: \"Weather App\",\n    description:\n      \"This app utilizes a weather tracking API to return a 5 day forecast and today's forecast! Handy if you need to know the weather.\",\n    links: [\n      { href: \"https://github.com/jyates92/Weather-App\", title: \"Github\" },\n      { href: \"https://jyates92.github.io/Weather-App/\", title: \"Site\" },\n    ],\n  },\n];\n\nconst App = () => (\n  <>\n    <Header />\n    <Bio />\n    <Work projects={projects} />\n    <Contact />\n    <Footer />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}